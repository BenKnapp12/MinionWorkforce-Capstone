import { BasicBuilder } from './BasicBuilder';
import { DocComment } from './DocComment';
import { TypeBuilder } from './TypeBuilder';
import { WellKnownSymbol } from './WellKnownSymbol';
import { Writer } from './Writer';
export declare class Property implements BasicBuilder {
    private name;
    private type;
    private isOptional;
    private isReadonly;
    private docComment?;
    constructor(name: string | WellKnownSymbol, type: TypeBuilder);
    optional(): this;
    readonly(): this;
    setDocComment(docComment: DocComment): this;
    write(writer: Writer): void;
}
export declare function property(name: string | WellKnownSymbol, type: TypeBuilder): Property;
