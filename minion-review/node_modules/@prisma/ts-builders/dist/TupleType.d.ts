import { BasicBuilder } from './BasicBuilder';
import { TypeBuilder } from './TypeBuilder';
import { Writer } from './Writer';
export declare class TupleItem implements BasicBuilder {
    readonly type: TypeBuilder;
    private name;
    constructor(type: TypeBuilder);
    setName(name: string): this;
    write(writer: Writer<undefined>): void;
}
export declare class TupleType extends TypeBuilder {
    readonly items: TupleItem[];
    add(item: TypeBuilder | TupleItem): this;
    write(writer: Writer): void;
}
export declare function tupleType(): TupleType;
export declare function tupleItem(type: TypeBuilder): TupleItem;
