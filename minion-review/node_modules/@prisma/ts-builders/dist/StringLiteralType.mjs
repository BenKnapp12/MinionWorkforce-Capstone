import { TypeBuilder } from "./TypeBuilder";
import { ValueBuilder } from "./ValueBuilder";
class StringLiteralType extends TypeBuilder {
  constructor(content) {
    super();
    this.content = content;
  }
  write(writer) {
    writer.write(JSON.stringify(this.content));
  }
  asValue() {
    return new StringLiteralValue(this);
  }
}
class StringLiteralValue extends ValueBuilder {
  #type;
  constructor(type) {
    super();
    this.#type = type;
  }
  write(writer) {
    writer.write(this.#type);
  }
}
function stringLiteral(content) {
  return new StringLiteralType(content);
}
export {
  StringLiteralType,
  StringLiteralValue,
  stringLiteral
};
