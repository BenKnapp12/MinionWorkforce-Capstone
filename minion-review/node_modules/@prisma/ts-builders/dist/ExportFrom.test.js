"use strict";
var import_vitest = require("vitest");
var import_ExportFrom = require("./ExportFrom");
var import_stringify = require("./stringify");
(0, import_vitest.test)("module name only", () => {
  (0, import_vitest.expect)((0, import_stringify.stringify)((0, import_ExportFrom.moduleExportFrom)("someModule"))).toMatchInlineSnapshot(`"export * from "someModule""`);
});
(0, import_vitest.test)("namespace", () => {
  const exportDecl = (0, import_ExportFrom.moduleExportFrom)("myModule").asNamespace("ns");
  (0, import_vitest.expect)((0, import_stringify.stringify)(exportDecl)).toMatchInlineSnapshot(`"export * as ns from 'myModule'"`);
});
(0, import_vitest.test)("named", () => {
  const exportDecl = (0, import_ExportFrom.moduleExportFrom)("myModule").named("func");
  (0, import_vitest.expect)((0, import_stringify.stringify)(exportDecl)).toMatchInlineSnapshot(`"export { func } from "myModule""`);
});
(0, import_vitest.test)("named with alias", () => {
  const exportDecl = (0, import_ExportFrom.moduleExportFrom)("myModule").named((0, import_ExportFrom.namedExport)("func").as("myFunc"));
  (0, import_vitest.expect)((0, import_stringify.stringify)(exportDecl)).toMatchInlineSnapshot(`"export { func as myFunc } from "myModule""`);
});
(0, import_vitest.test)("multiple named", () => {
  const exportDecl = (0, import_ExportFrom.moduleExportFrom)("myModule").named("func1").named("func2").named((0, import_ExportFrom.namedExport)("func3").as("aliasedFunc3"));
  (0, import_vitest.expect)((0, import_stringify.stringify)(exportDecl)).toMatchInlineSnapshot(
    `"export { func1, func2, func3 as aliasedFunc3 } from "myModule""`
  );
});
