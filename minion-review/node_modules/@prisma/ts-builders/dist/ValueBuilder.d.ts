import { BasicBuilder } from './BasicBuilder';
import { TypeBuilder } from './TypeBuilder';
import { Writer } from './Writer';
export declare abstract class ValueBuilder implements BasicBuilder {
    as(type: TypeBuilder): TypeAssertion;
    abstract write(writer: Writer<undefined>): void;
}
export declare class TypeAssertion extends ValueBuilder {
    #private;
    constructor(value: ValueBuilder, type: TypeBuilder);
    write(writer: Writer): void;
}
