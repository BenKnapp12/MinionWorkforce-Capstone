"use strict";
var import_vitest = require("vitest");
var import_ArrayType = require("./ArrayType");
var import_FunctionType = require("./FunctionType");
var import_KeyofType = require("./KeyofType");
var import_NamedType = require("./NamedType");
var import_ObjectType = require("./ObjectType");
var import_stringify = require("./stringify");
var import_UnionType = require("./UnionType");
const A = (0, import_NamedType.namedType)("A");
const B = (0, import_NamedType.namedType)("B");
const C = (0, import_NamedType.namedType)("C");
(0, import_vitest.test)("simple only", () => {
  (0, import_vitest.expect)((0, import_stringify.stringify)((0, import_KeyofType.keyOfType)(A))).toMatchInlineSnapshot(`"keyof A"`);
});
(0, import_vitest.test)("with object type", () => {
  (0, import_vitest.expect)((0, import_stringify.stringify)((0, import_KeyofType.keyOfType)((0, import_ObjectType.objectType)()))).toMatchInlineSnapshot(`"keyof {}"`);
});
(0, import_vitest.test)("with array type", () => {
  (0, import_vitest.expect)((0, import_stringify.stringify)((0, import_KeyofType.keyOfType)((0, import_ArrayType.array)(A)))).toMatchInlineSnapshot(`"keyof A[]"`);
});
(0, import_vitest.test)("with function type", () => {
  (0, import_vitest.expect)((0, import_stringify.stringify)((0, import_KeyofType.keyOfType)((0, import_FunctionType.functionType)()))).toMatchInlineSnapshot(`"keyof (() => void)"`);
});
(0, import_vitest.test)("with union type", () => {
  const union = (0, import_UnionType.unionType)(A).addVariant(B).addVariant(C);
  (0, import_vitest.expect)((0, import_stringify.stringify)((0, import_KeyofType.keyOfType)(union))).toMatchInlineSnapshot(`"keyof (A | B | C)"`);
});
