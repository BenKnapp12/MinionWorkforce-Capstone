"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var PrimitiveType_exports = {};
__export(PrimitiveType_exports, {
  PrimitiveType: () => PrimitiveType,
  anyType: () => anyType,
  bigintType: () => bigintType,
  booleanType: () => booleanType,
  neverType: () => neverType,
  nullType: () => nullType,
  numberType: () => numberType,
  stringType: () => stringType,
  thisType: () => thisType,
  undefinedType: () => undefinedType,
  unknownType: () => unknownType,
  voidType: () => voidType
});
module.exports = __toCommonJS(PrimitiveType_exports);
var import_TypeBuilder = require("./TypeBuilder");
class PrimitiveType extends import_TypeBuilder.TypeBuilder {
  constructor(name) {
    super();
    this.name = name;
  }
  write(writer) {
    writer.write(this.name);
  }
}
const stringType = new PrimitiveType("string");
const numberType = new PrimitiveType("number");
const booleanType = new PrimitiveType("boolean");
const nullType = new PrimitiveType("null");
const undefinedType = new PrimitiveType("undefined");
const bigintType = new PrimitiveType("bigint");
const unknownType = new PrimitiveType("unknown");
const anyType = new PrimitiveType("any");
const voidType = new PrimitiveType("void");
const thisType = new PrimitiveType("this");
const neverType = new PrimitiveType("never");
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  PrimitiveType,
  anyType,
  bigintType,
  booleanType,
  neverType,
  nullType,
  numberType,
  stringType,
  thisType,
  undefinedType,
  unknownType,
  voidType
});
