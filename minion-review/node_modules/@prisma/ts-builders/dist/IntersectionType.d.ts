import { TypeBuilder } from './TypeBuilder';
import { Writer } from './Writer';
export declare class IntersectionType<MemberType extends TypeBuilder = TypeBuilder> extends TypeBuilder {
    needsParenthesisWhenIndexed: boolean;
    needsParenthesisInKeyof: boolean;
    readonly members: MemberType[];
    constructor(firstType: MemberType);
    addType(type: MemberType): this;
    addTypes(types: MemberType[]): this;
    write(writer: Writer): void;
    mapTypes<NewMemberType extends TypeBuilder>(callback: (type: MemberType) => NewMemberType): IntersectionType<NewMemberType>;
}
export declare function intersectionType<MemberType extends TypeBuilder = TypeBuilder>(types: MemberType[] | MemberType): IntersectionType<MemberType>;
