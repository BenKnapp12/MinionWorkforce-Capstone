import { TypeBuilder } from "./TypeBuilder";
class PrimitiveType extends TypeBuilder {
  constructor(name) {
    super();
    this.name = name;
  }
  write(writer) {
    writer.write(this.name);
  }
}
const stringType = new PrimitiveType("string");
const numberType = new PrimitiveType("number");
const booleanType = new PrimitiveType("boolean");
const nullType = new PrimitiveType("null");
const undefinedType = new PrimitiveType("undefined");
const bigintType = new PrimitiveType("bigint");
const unknownType = new PrimitiveType("unknown");
const anyType = new PrimitiveType("any");
const voidType = new PrimitiveType("void");
const thisType = new PrimitiveType("this");
const neverType = new PrimitiveType("never");
export {
  PrimitiveType,
  anyType,
  bigintType,
  booleanType,
  neverType,
  nullType,
  numberType,
  stringType,
  thisType,
  undefinedType,
  unknownType,
  voidType
};
