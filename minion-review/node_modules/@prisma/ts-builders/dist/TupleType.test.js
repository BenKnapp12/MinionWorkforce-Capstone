"use strict";
var import_vitest = require("vitest");
var import_NamedType = require("./NamedType");
var import_stringify = require("./stringify");
var import_TupleType = require("./TupleType");
(0, import_vitest.test)("empty", () => {
  const tuple = (0, import_TupleType.tupleType)();
  (0, import_vitest.expect)((0, import_stringify.stringify)(tuple)).toMatchInlineSnapshot(`"[]"`);
});
(0, import_vitest.test)("one item", () => {
  const tuple = (0, import_TupleType.tupleType)().add((0, import_NamedType.namedType)("A"));
  (0, import_vitest.expect)((0, import_stringify.stringify)(tuple)).toMatchInlineSnapshot(`"[A]"`);
});
(0, import_vitest.test)("with named item", () => {
  const tuple = (0, import_TupleType.tupleType)().add((0, import_TupleType.tupleItem)((0, import_NamedType.namedType)("A")).setName("foo"));
  (0, import_vitest.expect)((0, import_stringify.stringify)(tuple)).toMatchInlineSnapshot(`"[foo: A]"`);
});
(0, import_vitest.test)("multiple items", () => {
  const tuple = (0, import_TupleType.tupleType)().add((0, import_NamedType.namedType)("A")).add((0, import_NamedType.namedType)("B")).add((0, import_NamedType.namedType)("C"));
  (0, import_vitest.expect)((0, import_stringify.stringify)(tuple)).toMatchInlineSnapshot(`"[A, B, C]"`);
});
