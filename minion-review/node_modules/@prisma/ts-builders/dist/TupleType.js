"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var TupleType_exports = {};
__export(TupleType_exports, {
  TupleItem: () => TupleItem,
  TupleType: () => TupleType,
  tupleItem: () => tupleItem,
  tupleType: () => tupleType
});
module.exports = __toCommonJS(TupleType_exports);
var import_TypeBuilder = require("./TypeBuilder");
class TupleItem {
  constructor(type) {
    this.type = type;
  }
  name;
  setName(name) {
    this.name = name;
    return this;
  }
  write(writer) {
    if (this.name) {
      writer.write(this.name).write(": ");
    }
    writer.write(this.type);
  }
}
class TupleType extends import_TypeBuilder.TypeBuilder {
  items = [];
  add(item) {
    if (item instanceof import_TypeBuilder.TypeBuilder) {
      item = new TupleItem(item);
    }
    this.items.push(item);
    return this;
  }
  write(writer) {
    writer.write("[").writeJoined(", ", this.items).write("]");
  }
}
function tupleType() {
  return new TupleType();
}
function tupleItem(type) {
  return new TupleItem(type);
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  TupleItem,
  TupleType,
  tupleItem,
  tupleType
});
