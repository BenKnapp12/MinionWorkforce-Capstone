"use strict";
var import_vitest = require("vitest");
var import_DocComment = require("./DocComment");
var import_stringify = require("./stringify");
(0, import_vitest.test)("empty", () => {
  (0, import_vitest.expect)((0, import_stringify.stringify)((0, import_DocComment.docComment)())).toMatchInlineSnapshot(`
    "/**
     */
    "
  `);
});
(0, import_vitest.test)("one line", () => {
  (0, import_vitest.expect)((0, import_stringify.stringify)((0, import_DocComment.docComment)("I am comment"))).toMatchInlineSnapshot(`
    "/**
     * I am comment
     */
    "
  `);
});
(0, import_vitest.test)("multiline", () => {
  (0, import_vitest.expect)((0, import_stringify.stringify)((0, import_DocComment.docComment)("first\nsecond"))).toMatchInlineSnapshot(`
    "/**
     * first
     * second
     */
    "
  `);
});
(0, import_vitest.test)("multiple addText calls", () => {
  const comment = (0, import_DocComment.docComment)("Line 1").addText("Line 2").addText("Line 3");
  (0, import_vitest.expect)((0, import_stringify.stringify)(comment)).toMatchInlineSnapshot(`
    "/**
     * Line 1
     * Line 2
     * Line 3
     */
    "
  `);
});
(0, import_vitest.test)("tagged template - empty", () => {
  (0, import_vitest.expect)((0, import_stringify.stringify)(import_DocComment.docComment``)).toMatchInlineSnapshot(`
    "/**
     */
    "
  `);
});
(0, import_vitest.test)("tagged template - spaces only", () => {
  (0, import_vitest.expect)((0, import_stringify.stringify)(import_DocComment.docComment`    `)).toMatchInlineSnapshot(`
    "/**
     */
    "
  `);
});
(0, import_vitest.test)("tagged template - with content", () => {
  const comment = import_DocComment.docComment`
        This is a multiline comment
           - this line should be indented
        And this should be not
    `;
  (0, import_vitest.expect)((0, import_stringify.stringify)(comment)).toMatchInlineSnapshot(`
    "/**
     * This is a multiline comment
     *    - this line should be indented
     * And this should be not
     */
    "
  `);
});
(0, import_vitest.test)("tagged template - with substitutions", () => {
  const name = "World";
  const comment = import_DocComment.docComment`
    Hello, ${name}!
  `;
  (0, import_vitest.expect)((0, import_stringify.stringify)(comment)).toMatchInlineSnapshot(`
    "/**
     * Hello, World!
     */
    "
  `);
});
