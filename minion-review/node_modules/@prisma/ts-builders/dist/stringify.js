"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var stringify_exports = {};
__export(stringify_exports, {
  stringify: () => stringify
});
module.exports = __toCommonJS(stringify_exports);
var import_internals = require("@prisma/internals");
var import_Writer = require("./Writer");
function stringify(builder, { indentLevel = 0, newLine = "none" } = {}) {
  const str = new import_Writer.Writer(indentLevel, void 0).write(builder).toString();
  switch (newLine) {
    case "none":
      return str;
    case "leading":
      return "\n" + str;
    case "trailing":
      return str + "\n";
    case "both":
      return "\n" + str + "\n";
    default:
      (0, import_internals.assertNever)(newLine, "Unexpected value");
  }
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  stringify
});
