"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var File_exports = {};
__export(File_exports, {
  File: () => File,
  file: () => file
});
module.exports = __toCommonJS(File_exports);
class File {
  imports = [];
  declarations = [];
  addImport(moduleImport) {
    this.imports.push(moduleImport);
    return this;
  }
  add(declaration) {
    this.declarations.push(declaration);
  }
  write(writer) {
    for (const moduleImport of this.imports) {
      writer.writeLine(moduleImport);
    }
    if (this.imports.length > 0) {
      writer.newLine();
    }
    for (const [i, declaration] of this.declarations.entries()) {
      writer.writeLine(declaration);
      if (i < this.declarations.length - 1) {
        writer.newLine();
      }
    }
  }
}
function file() {
  return new File();
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  File,
  file
});
