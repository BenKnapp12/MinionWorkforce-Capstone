import { BasicBuilder } from './BasicBuilder';
import { DocComment } from './DocComment';
import { GenericParameter } from './GenericParameter';
import { TypeBuilder } from './TypeBuilder';
import { Writer } from './Writer';
export declare class TypeDeclaration<InnerType extends TypeBuilder = TypeBuilder> implements BasicBuilder {
    name: string;
    readonly type: InnerType;
    private genericParameters;
    private docComment?;
    constructor(name: string, type: InnerType);
    addGenericParameter(param: GenericParameter): this;
    setName(name: string): this;
    setDocComment(docComment: DocComment): this;
    write(writer: Writer): void;
}
export declare function typeDeclaration<InnerType extends TypeBuilder = TypeBuilder>(name: string, type: InnerType): TypeDeclaration<InnerType>;
