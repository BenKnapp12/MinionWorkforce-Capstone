import { TsConfigJsonResolved } from 'get-tsconfig';
import type { RuntimeTargetInternal } from './runtime-targets';
declare const expectedGeneratedFileExtensions: readonly ["ts", "mts", "cts"];
export type GeneratedFileExtension = (typeof expectedGeneratedFileExtensions)[number] | (string & {});
declare const expectedImportFileExtensions: readonly ["", "ts", "mts", "cts", "js", "mjs", "cjs"];
export type ImportFileExtension = (typeof expectedImportFileExtensions)[number] | (string & {});
export declare function parseGeneratedFileExtension(extension: unknown): GeneratedFileExtension;
export declare function parseImportFileExtension(extension: unknown): ImportFileExtension;
export type FileNameMapper = (baseName: string) => string;
export declare function generatedFileNameMapper(generatedFileExtension: GeneratedFileExtension): FileNameMapper;
export declare function importFileNameMapper(importFileExtension: ImportFileExtension): FileNameMapper;
type InferImportFileExtensionOptions = {
    tsconfig: TsConfigJsonResolved | undefined;
    generatedFileExtension: GeneratedFileExtension;
    target: RuntimeTargetInternal;
};
export declare function inferImportFileExtension({ tsconfig, generatedFileExtension, target, }: InferImportFileExtensionOptions): ImportFileExtension;
export {};
