/// <reference types="node" />
/// <reference types="node" />
import type * as DMMF from '@prisma/dmmf';
import type { ActiveConnectorType, BinaryPaths, DataSource, GeneratorConfig, SqlQueryOutput } from '@prisma/generator';
import { EnvPaths } from '@prisma/internals';
import type { O } from 'ts-toolbelt';
import { GeneratedFileExtension, ImportFileExtension } from './file-extensions';
import { ModuleFormat } from './module-format';
import type { RuntimeTargetInternal } from './runtime-targets';
export declare class DenylistError extends Error {
    constructor(message: string);
}
export interface GenerateClientOptions {
    datamodel: string;
    schemaPath: string;
    /** Runtime path used in runtime/type imports */
    runtimeBase: string;
    outputDir: string;
    generator: GeneratorConfig;
    dmmf: DMMF.Document;
    datasources: DataSource[];
    binaryPaths: BinaryPaths;
    engineVersion: string;
    clientVersion: string;
    activeProvider: ActiveConnectorType;
    envPaths?: EnvPaths;
    /** When --postinstall is passed via CLI */
    postinstall?: boolean;
    /** False when --no-engine is passed via CLI */
    copyEngine?: boolean;
    typedSql?: SqlQueryOutput[];
    target: RuntimeTargetInternal;
    generatedFileExtension: GeneratedFileExtension;
    importFileExtension: ImportFileExtension;
    moduleFormat: ModuleFormat;
    /** Include a "@ts-nocheck" comment at the top of all generated TS files */
    tsNoCheckPreamble: Boolean;
}
export interface FileMap {
    [name: string]: string | Buffer | FileMap;
}
export interface BuildClientResult {
    fileMap: FileMap;
    prismaClientDmmf: DMMF.Document;
}
export declare function buildClient({ schemaPath, runtimeBase, datamodel, binaryPaths, outputDir, generator, dmmf, datasources, engineVersion, clientVersion, activeProvider, postinstall, copyEngine, envPaths, typedSql, target, generatedFileExtension, importFileExtension, moduleFormat, tsNoCheckPreamble, }: O.Required<GenerateClientOptions, 'runtimeBase'>): BuildClientResult;
export declare function generateClient(options: GenerateClientOptions): Promise<void>;
