import { ActiveConnectorType } from '@prisma/generator';
import type { FileMap } from '../generateClient';
import type { ModuleFormat } from '../module-format';
import type { RuntimeTargetInternal } from '../runtime-targets';
import type { RuntimeName } from '../TSClient/TSClient';
export type BuildWasmModuleOptions = {
    component: 'engine' | 'compiler';
    runtimeName: RuntimeName;
    runtimeBase: string;
    target: RuntimeTargetInternal;
    activeProvider: ActiveConnectorType;
    moduleFormat: ModuleFormat;
};
export declare function buildGetWasmModule({ component, runtimeName, runtimeBase, activeProvider, moduleFormat, }: BuildWasmModuleOptions): string;
export type BuildWasmFileMapOptions = {
    activeProvider: ActiveConnectorType;
    runtimeName: RuntimeName;
};
export declare function buildWasmFileMap({ activeProvider, runtimeName }: BuildWasmFileMapOptions): FileMap;
