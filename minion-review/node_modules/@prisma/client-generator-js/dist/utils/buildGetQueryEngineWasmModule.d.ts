import { TSClientOptions } from '../TSClient/TSClient';
/**
 * Builds the necessary glue code to load the query engine wasm module.
 * @returns
 */
export declare function buildQueryEngineWasmModule(wasm: boolean, copyEngine: boolean, runtimeNameJs: TSClientOptions['runtimeNameJs']): "config.engineWasm = {\n      getRuntime: async () => require('./query_engine_bg.js'),\n      getQueryEngineWasmModule: async () => {\n        const queryEngineWasmFilePath = require('path').join(config.dirname, 'query_engine_bg.wasm')\n        const queryEngineWasmFileBytes = require('fs').readFileSync(queryEngineWasmFilePath)\n\n        return new WebAssembly.Module(queryEngineWasmFileBytes)\n      }\n    }" | "config.engineWasm = {\n  getRuntime: async () => require('./query_engine_bg.js'),\n  getQueryEngineWasmModule: async () => {\n    const loader = (await import('#wasm-engine-loader')).default\n    const engine = (await loader).default\n    return engine\n  }\n}" | "config.engineWasm = undefined";
