import * as DMMF from '@prisma/dmmf';
import * as ts from '@prisma/ts-builders';
import { GenerateContext } from './TSClient/GenerateContext';
export declare function getSelectName(modelName: string): string;
export declare function getSelectCreateManyAndReturnName(modelName: string): string;
export declare function getSelectUpdateManyAndReturnName(modelName: string): string;
export declare function getIncludeName(modelName: string): string;
export declare function getIncludeCreateManyAndReturnName(modelName: string): string;
export declare function getIncludeUpdateManyAndReturnName(modelName: string): string;
export declare function getCreateManyAndReturnOutputType(modelName: string): string;
export declare function getUpdateManyAndReturnOutputType(modelName: string): string;
export declare function getOmitName(modelName: string): string;
export declare function getAggregateName(modelName: string): string;
export declare function getGroupByName(modelName: string): string;
export declare function getAvgAggregateName(modelName: string): string;
export declare function getSumAggregateName(modelName: string): string;
export declare function getMinAggregateName(modelName: string): string;
export declare function getMaxAggregateName(modelName: string): string;
export declare function getCountAggregateInputName(modelName: string): string;
export declare function getCountAggregateOutputName(modelName: string): string;
export declare function getAggregateInputType(aggregateOutputType: string): string;
export declare function getGroupByArgsName(modelName: string): string;
export declare function getGroupByPayloadName(modelName: string): string;
export declare function getAggregateArgsName(modelName: string): string;
export declare function getAggregateGetName(modelName: string): string;
export declare function getAggregateScalarGetName(modelName: string): string;
export declare function getFieldArgName(field: DMMF.SchemaField, modelName: string): string;
export declare function getModelFieldArgsName(field: DMMF.SchemaField, modelName: string): string;
export declare function getModelArgName(modelName: string, action?: DMMF.ModelAction): string;
export declare function getPayloadName(modelName: string, namespace?: boolean): string;
export declare function getFieldRefsTypeName(name: string): string;
export declare function getType(name: string, isList: boolean, isOptional?: boolean): string;
export declare function getRefAllowedTypeName(type: DMMF.OutputTypeRef): string;
export declare function appendSkipType(context: GenerateContext, type: ts.TypeBuilder): ts.TypeBuilder;
export declare const extArgsParam: ts.GenericParameter;
