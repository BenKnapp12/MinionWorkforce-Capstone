"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var registry_exports = {};
__export(registry_exports, {
  GeneratorRegistry: () => GeneratorRegistry
});
module.exports = __toCommonJS(registry_exports);
class GeneratorRegistry {
  #generators = /* @__PURE__ */ new Map();
  add(generator) {
    this.#generators.set(generator.name, generator);
  }
  addAliased(name, generator) {
    this.#generators.set(name, generator);
  }
  toInternal() {
    return Object.fromEntries(
      [...this.#generators.entries()].map(([name, generator]) => [
        name,
        {
          type: "in-process",
          generator
        }
      ])
    );
  }
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  GeneratorRegistry
});
