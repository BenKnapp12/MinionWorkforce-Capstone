#!/usr/bin/env tsx
"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var import_chunk_NGQA5JTN = require("./chunk-NGQA5JTN.js");
var import_chunk_R2YKCEAN = require("./chunk-R2YKCEAN.js");
var import_chunk_YQ6GTOKJ = require("./chunk-YQ6GTOKJ.js");
var import_chunk_C3722PDA = require("./chunk-C3722PDA.js");
var import_chunk_7CQBDP4H = require("./chunk-7CQBDP4H.js");
var import_chunk_QF5OMSPA = require("./chunk-QF5OMSPA.js");
var import_chunk_B64PYCYC = require("./chunk-B64PYCYC.js");
var import_chunk_RNQEWSLQ = require("./chunk-RNQEWSLQ.js");
var import_chunk_YEUENY2G = require("./chunk-YEUENY2G.js");
var import_chunk_VAJ4VX67 = require("./chunk-VAJ4VX67.js");
var import_chunk_EJG7GKM7 = require("./chunk-EJG7GKM7.js");
var import_chunk_U62JTEME = require("./chunk-U62JTEME.js");
var import_chunk_UQEITMMV = require("./chunk-UQEITMMV.js");
var import_chunk_IINN7QUV = require("./chunk-IINN7QUV.js");
var import_chunk_JZ75RIMZ = require("./chunk-JZ75RIMZ.js");
var import_chunk_RR6BKMNO = require("./chunk-RR6BKMNO.js");
var import_chunk_RTGQXNX6 = require("./chunk-RTGQXNX6.js");
var import_chunk_JFKDSUIE = require("./chunk-JFKDSUIE.js");
var import_chunk_AI6DH66U = require("./chunk-AI6DH66U.js");
var import_chunk_AHJ2N6BJ = require("./chunk-AHJ2N6BJ.js");
var import_chunk_LGYRZ6CV = require("./chunk-LGYRZ6CV.js");
var import_chunk_WXE3X4AN = require("./chunk-WXE3X4AN.js");
var import_chunk_EXY2VDLY = require("./chunk-EXY2VDLY.js");
var import_chunk_3WC4XD74 = require("./chunk-3WC4XD74.js");
var import_chunk_DYXEUKV3 = require("./chunk-DYXEUKV3.js");
var import_chunk_HFXUQT52 = require("./chunk-HFXUQT52.js");
var import_chunk_LLO7YF56 = require("./chunk-LLO7YF56.js");
var import_chunk_BKW5AGJV = require("./chunk-BKW5AGJV.js");
var import_chunk_KRQEFTDT = require("./chunk-KRQEFTDT.js");
var import_chunk_UP6FVCDK = require("./chunk-UP6FVCDK.js");
var import_chunk_2R6DII47 = require("./chunk-2R6DII47.js");
var import_chunk_2FXU5NZQ = require("./chunk-2FXU5NZQ.js");
var import_chunk_74LUB4XX = require("./chunk-74LUB4XX.js");
var import_chunk_TWPTG4XS = require("./chunk-TWPTG4XS.js");
var import_chunk_F3JIZWIS = require("./chunk-F3JIZWIS.js");
var import_chunk_PCTCQIOH = require("./chunk-PCTCQIOH.js");
var import_chunk_URKH6SE2 = require("./chunk-URKH6SE2.js");
var import_chunk_GGA2F64G = require("./chunk-GGA2F64G.js");
var import_chunk_23DZXSTI = require("./chunk-23DZXSTI.js");
var import_chunk_ORBFWBKN = require("./chunk-ORBFWBKN.js");
var import_chunk_CD4AWGFA = require("./chunk-CD4AWGFA.js");
var import_chunk_AXR7LS2N = require("./chunk-AXR7LS2N.js");
var import_chunk_L6KOIJJ5 = require("./chunk-L6KOIJJ5.js");
var import_chunk_SKRR5WT4 = require("./chunk-SKRR5WT4.js");
var import_chunk_2ESYSVXG = require("./chunk-2ESYSVXG.js");
var import_config = require("@prisma/config");
var import_debug = __toESM(require("@prisma/debug"));
var import_engines_version = require("@prisma/engines-version");
var import_internals = require("@prisma/internals");
var version = "6.16.2";
process.on("uncaughtException", (e) => {
  console.log(e);
});
process.on("unhandledRejection", (e, promise) => {
  console.log(String(e), String(promise));
});
process.once("SIGINT", () => {
  process.exit(130);
});
var commandArray = process.argv.slice(2);
var args = (0, import_internals.arg)(
  commandArray,
  {
    "--config": String
  },
  false,
  true
);
async function main() {
  const cli = import_chunk_NGQA5JTN.CLI.new({
    migrate: import_chunk_LLO7YF56.MigrateCommand.new({
      dev: import_chunk_YQ6GTOKJ.MigrateDev.new(),
      status: import_chunk_YEUENY2G.MigrateStatus.new(),
      resolve: import_chunk_RNQEWSLQ.MigrateResolve.new(),
      reset: import_chunk_B64PYCYC.MigrateReset.new(),
      deploy: import_chunk_BKW5AGJV.MigrateDeploy.new(),
      diff: import_chunk_QF5OMSPA.MigrateDiff.new()
    }),
    db: import_chunk_EJG7GKM7.DbCommand.new({
      execute: import_chunk_U62JTEME.DbExecute.new(),
      pull: import_chunk_UQEITMMV.DbPull.new(),
      push: import_chunk_WXE3X4AN.DbPush.new(),
      // drop: DbDrop.new(),
      seed: import_chunk_DYXEUKV3.DbSeed.new()
    })
  });
  const { config, error } = await (0, import_config.loadConfigFromFile)({ configFile: args["--config"] });
  if (error) {
    console.error(`Failed to load config file: ${error._tag}`);
    return 1;
  }
  const result = await cli.parse(commandArray, config);
  if (result instanceof import_internals.HelpError) {
    console.error(result);
    return 1;
  } else if ((0, import_internals.isError)(result)) {
    console.error(result);
    return 1;
  }
  console.log(result);
  return 0;
}
main().then((code) => {
  if (code !== 0) {
    process.exit(code);
  }
}).catch((error) => {
  if (error.rustStack) {
    (0, import_internals.handlePanic)({
      error,
      cliVersion: version,
      enginesVersion: import_engines_version.enginesVersion,
      command: commandArray.join(" "),
      getDatabaseVersionSafe: import_chunk_R2YKCEAN.getDatabaseVersionSafe
    }).catch((e) => {
      if (import_debug.default.enabled("migrate")) {
        console.error((0, import_chunk_SKRR5WT4.red)((0, import_chunk_SKRR5WT4.bold)("Error: ")) + e.stack);
      } else {
        console.error((0, import_chunk_SKRR5WT4.red)((0, import_chunk_SKRR5WT4.bold)("Error: ")) + e.message);
      }
    }).finally(() => {
      process.exit(1);
    });
  } else {
    if (import_debug.default.enabled("migrate")) {
      console.error((0, import_chunk_SKRR5WT4.red)((0, import_chunk_SKRR5WT4.bold)("Error: ")) + error.stack);
    } else {
      console.error((0, import_chunk_SKRR5WT4.red)((0, import_chunk_SKRR5WT4.bold)("Error: ")) + error.message);
    }
    process.exit(1);
  }
});
