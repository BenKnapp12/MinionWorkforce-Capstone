import { DataSource } from '@prisma/generator';
import type { DatabaseCredentials } from '@prisma/internals';
import { ConnectorType } from './printDatasources';
export type MigrateAction = 'create' | 'apply' | 'unapply' | 'dev' | 'push';
export type PrettyProvider = 'MySQL' | 'PostgreSQL' | 'Prisma Postgres' | 'SQLite' | 'SQL Server' | 'CockroachDB' | 'MongoDB';
export type DatasourceInfo = {
    name?: string;
    prettyProvider?: PrettyProvider;
    url?: string;
    dbLocation?: string;
    dbName?: string;
    schema?: string;
    schemas?: string[];
    configDir?: string;
};
export declare function parseDatasourceInfo(datasource: DataSource | undefined): DatasourceInfo;
export declare function ensureCanConnectToDatabase(datasource: DataSource | undefined): Promise<Boolean | Error>;
export declare function ensureDatabaseExists(datasource: DataSource | undefined): Promise<string | undefined>;
export declare function getDbLocation(credentials: DatabaseCredentials): string | undefined;
/**
 * Return a pretty version of a "provider" (with uppercase characters)
 * @param provider
 * @returns PrettyProvider
 */
export declare function prettifyProvider(provider: ConnectorType): PrettyProvider;
