import { UserFacingError } from '../user-facing-error';
export declare class TransactionManagerError extends UserFacingError {
    name: string;
    constructor(message: string, meta?: Record<string, unknown>);
}
export declare class TransactionNotFoundError extends TransactionManagerError {
    constructor();
}
export declare class TransactionClosedError extends TransactionManagerError {
    constructor(operation: string);
}
export declare class TransactionRolledBackError extends TransactionManagerError {
    constructor(operation: string);
}
export declare class TransactionStartTimeoutError extends TransactionManagerError {
    constructor();
}
export declare class TransactionExecutionTimeoutError extends TransactionManagerError {
    constructor(operation: string, { timeout, timeTaken }: {
        timeout: number;
        timeTaken: number;
    });
}
export declare class TransactionInternalConsistencyError extends TransactionManagerError {
    constructor(message: string);
}
export declare class InvalidTransactionIsolationLevelError extends TransactionManagerError {
    constructor(isolationLevel: string);
}
