import { Decimal } from 'decimal.js';
export type DateTaggedValue = {
    $type: 'DateTime';
    value: string;
};
export type DecimalTaggedValue = {
    $type: 'Decimal';
    value: string;
};
export type BytesTaggedValue = {
    $type: 'Bytes';
    value: string;
};
export type BigIntTaggedValue = {
    $type: 'BigInt';
    value: string;
};
export type FieldRefTaggedValue = {
    $type: 'FieldRef';
    value: {
        _ref: string;
    };
};
export type EnumTaggedValue = {
    $type: 'Enum';
    value: string;
};
export type JsonTaggedValue = {
    $type: 'Json';
    value: string;
};
export type JsonInputTaggedValue = DateTaggedValue | DecimalTaggedValue | BytesTaggedValue | BigIntTaggedValue | FieldRefTaggedValue | JsonTaggedValue | EnumTaggedValue;
export type JsonOutputTaggedValue = DateTaggedValue | DecimalTaggedValue | BytesTaggedValue | BigIntTaggedValue | JsonTaggedValue;
export type JsOutputValue = null | string | number | boolean | bigint | Uint8Array | Date | Decimal | JsOutputValue[] | {
    [key: string]: JsOutputValue;
};
export declare function normalizeJsonProtocolValues(result: unknown): unknown;
export declare function deserializeJsonResponse(result: unknown): unknown;
