"use strict";
var import_vitest = require("vitest");
var import_lazyProperty = require("./lazyProperty");
(0, import_vitest.test)("returns callback value", () => {
  const prop = (0, import_lazyProperty.lazyProperty)(import_vitest.vi.fn().mockReturnValue(123));
  (0, import_vitest.expect)(prop.get()).toBe(123);
});
(0, import_vitest.test)("computes property only once", () => {
  const compute = import_vitest.vi.fn().mockReturnValue(123);
  const prop = (0, import_lazyProperty.lazyProperty)(compute);
  prop.get();
  prop.get();
  (0, import_vitest.expect)(compute).toHaveBeenCalledTimes(1);
});
(0, import_vitest.test)("caches undefined values", () => {
  const compute = import_vitest.vi.fn().mockReturnValue(void 0);
  const prop = (0, import_lazyProperty.lazyProperty)(compute);
  prop.get();
  prop.get();
  (0, import_vitest.expect)(compute).toHaveBeenCalledTimes(1);
});
(0, import_vitest.test)("caches null values", () => {
  const compute = import_vitest.vi.fn().mockReturnValue(null);
  const prop = (0, import_lazyProperty.lazyProperty)(compute);
  prop.get();
  prop.get();
  (0, import_vitest.expect)(compute).toHaveBeenCalledTimes(1);
});
